C51 COMPILER V9.01   OSP_GLOBAL_STR                                                        02/22/2019 20:18:50 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OSP_GLOBAL_STR
OBJECT MODULE PLACED IN osp_global_str.OBJ
COMPILER INVOKED BY: E:\keil4\C51\BIN\C51.EXE osp_global_str.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "osp_global_str.h"
   2          
   3          ///********************************************************************
   4          // *@创建人:揭成
   5          // *@功能:内存比较
   6          // *
   7          // *@输入:  pur_add  :指向目的地址
   8          // *          src_ptr :指向源地址
   9          // *          lenth:数据长度
  10          // *@输出:  NONE
  11          //********************************************************************/
  12          //BOOL  osp_memcmp( const void * pur_add, const void*src_ptr, Bsize_t lenth )
  13          //{
  14          //  Bsize_t index;
  15          //  char*p_pur = ( char* )pur_add;
  16          //  char*p_src = ( char* )src_ptr;
  17          //  for ( index = 0;index < lenth;index++ )
  18          //  {
  19          //    if ( p_pur[index] != p_src[index] )
  20          //    {
  21          //      return BOOL_0;
  22          //    }
  23          //  }
  24          //  return BOOL_1;
  25          //}
  26          
  27          ///********************************************************************
  28          // *@创建人:揭成
  29          // *@功能:内存复制
  30          // *
  31          // *@输入: pur_add  :指向目标地址
  32          // *     pad_data :指向源地址
  33          // *       lenth:数据长度
  34          // *@输出:NONE
  35          //********************************************************************/
  36          //void osp_memcpy( void * pur_add, void*src_ptr, Bsize_t lenth )
  37          //{
  38          //  Bsize_t index;
  39          //  char*p_pur = ( char* )pur_add;
  40          //  char*p_src = ( char* )src_ptr;
  41          //  for ( index = 0;index < lenth;index++ )
  42          //  {
  43          //    p_pur[index] = p_src[index];
  44          //  }
  45          //  return ;
  46          //}
  47          
  48          ///*********************************************************************
  49          //*@函数名称:测试字符长度
  50          //*@创建人:揭成
  51          //*@输入: psrc  :要测试的字符串
  52          //*@输出:字符长度
  53          //*********************************************************************/
  54          //Bsize_t osp_strlen( char*psrc )
  55          //{
C51 COMPILER V9.01   OSP_GLOBAL_STR                                                        02/22/2019 20:18:50 PAGE 2   

  56          //  Bsize_t lenth = 0;
  57          //  while (( *psrc ) != ASCII_NULL )
  58          //  {
  59          //    lenth++;
  60          //    psrc++;
  61          //  }
  62          //  return lenth;
  63          //}
  64          
  65          ///*********************************************************************
  66          //*@函数名称:将字符串pstr2合并到pstr1
  67          //*@创建人:揭成
  68          //*@输入: pstr1  pstr2
  69          //*@ output :NONE
  70          //*必须确保pstr1 有足够的空间
  71          //*********************************************************************/
  72          //void osp_strcat( char*pstr1, char*pstr2 )
  73          //{
  74          //  char*pch;
  75          //  pch = ( char* )pstr1 + osp_strlen( pstr1 );
  76          //  osp_memcpy(( u8_t* )pch,
  77          //          ( u8_t* )pstr2,
  78          //          ( osp_strlen( pstr2 ) + 1 ) );
  79          //  return;
  80          //}
  81          
  82          ///********************************************************************
  83          // * @创建人 :揭成
  84          // * @功能 :在字符串中定位一个字符串
  85          // * @输入 :psrc 字符串  pserch 待查询的字符串
  86          // *
  87          // *@输出 :查询到字符的位置
  88          //********************************************************************/
  89          //char* osp_strstr( char*psrc, char*psearch )
  90          //{
  91          //  Bsize_t offset;
  92          //  Bsize_t psearch_lenth = osp_strlen( psearch );
  93          //  Bsize_t psrc_lenth = osp_strlen( psrc );
  94          //  for ( offset = 0;offset < psrc_lenth;offset++ )
  95          //  {
  96          //    if ( osp_memcmp( &psrc[offset],
  97          //              psearch,
  98          //              psearch_lenth ) )
  99          //    {
 100          //      return &( psrc[offset] );
 101          //    }
 102          //  }
 103          //  return PNULL;
 104          //}
 105          
 106          
 107          /********************************************************************
 108           *@创建人:揭成
 109           *@功能:内存填充
 110           *
 111           *@输入:  pur_add  :指向待填充内存开始地址
 112           *        pad_data :填充数据
 113           *        lenth    :数据长度
 114           *@输出:  NONE
 115          ********************************************************************/
 116          void osp_memset( void*pur_add, u8_t pad_data, Bsize_t lenth )
 117          {
C51 COMPILER V9.01   OSP_GLOBAL_STR                                                        02/22/2019 20:18:50 PAGE 3   

 118   1        Bsize_t index;
 119   1        u8_t*p_pur = ( u8_t* )pur_add;
 120   1        for ( index = 0;index < lenth;index++ )
 121   1        {
 122   2          p_pur[index] = pad_data;
 123   2        }
 124   1        return ;
 125   1      }
 126          
 127          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     33    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
